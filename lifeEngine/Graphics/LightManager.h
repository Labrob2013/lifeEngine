//////////////////////////////////////////////////////////////////////////
// 
//			*** lifeEngine (Двигатель Жизни) ***
//					Copyright (C) 2017
//
// Связь со мной:		https://vk.com/zombihello
// Репозиторий движка:  https://github.com/zombihello/lifeEngine
// 
//////////////////////////////////////////////////////////////////////////

#ifndef LIGHT_MANAGER_H
#define LIGHT_MANAGER_H

#define COMPILING_LIBRARY
#include <DllGlobal.h>

///////////////////////////
// СИСТЕМНЫЕ БИБЛИОТЕКИ
///////////////////////////
#include <vector>
using namespace std;

////////////////
// LIFEENGINE
///////////////
#include <Graphics\PointLight.h>

namespace le
{
	//-------------------------------------------------------------------------//

	class Scene;

	//-------------------------------------------------------------------------//

	//////////////////////////////////////////////////////////////////////
	/// \brief Класс-менеджер для работы с источниками света
	//////////////////////////////////////////////////////////////////////
	class DLL_API LightManager
	{
	public:
		//////////////////////////////////////////////////////////////////////
		/// \brief Конструктор
		//////////////////////////////////////////////////////////////////////
		LightManager();

		//////////////////////////////////////////////////////////////////////
		/// \brief Деструктор
		//////////////////////////////////////////////////////////////////////
		~LightManager();

		//////////////////////////////////////////////////////////////////////
		/// \brief Добавить все источники света на сцену
		//////////////////////////////////////////////////////////////////////
		void AddLightsToScene( Scene& Scene );

		//////////////////////////////////////////////////////////////////////
		/// \brief Добавить точечный источник света 
		/// \details Этот метод создает точечный источник по переданным
		/// характеристикам. По умолчанию источник статичный, чтобы
		/// сделать его динамичным надо получить его объект у менеджера
		/// и вызвать метод SetDinamicLight (у статичного света не обновляются
		/// карты теней)
		///
		/// \param[in] NameLight Название света
		/// \param[in] Radius Радиус света
		/// \param[in] Intensivity Интенсивность света
		/// \param[in] Position Позиция света
		/// \param[in] Color Цвет света
		/// \param[in] Specular Отражение света
		//////////////////////////////////////////////////////////////////////
		void AddPointLight( const string& NameLight, float Radius, float Intensivity, const glm::vec3& Position, const glm::vec4& Color, const glm::vec4& Specular = glm::vec4( 0.0f, 0.0f, 0.0f, 1.0f ) );
		
		//////////////////////////////////////////////////////////////////////
		/// \brief Добавить точечный источник света 
		/// \details Этот метод создает копию точечного света и добовляет
		/// ее в менеджер
		///
		/// \param[in] NameLight Название света
		/// \param[in] PointLight Точечный свет
		//////////////////////////////////////////////////////////////////////
		void AddPointLight( const string& NameLight, const PointLight& PointLight );

		//////////////////////////////////////////////////////////////////////
		/// \brief Уничтожить точеный источник света
		///
		/// \param[in] NameLight Название света
		//////////////////////////////////////////////////////////////////////
		void DestroyPointLight( const string& NameLight );

		//////////////////////////////////////////////////////////////////////
		/// \brief Уничтожить все точеные источники света
		//////////////////////////////////////////////////////////////////////
		void DestroyAllPointLights();

		//////////////////////////////////////////////////////////////////////
		/// \brief Уничтожить все источники света
		//////////////////////////////////////////////////////////////////////
		void DestroyAllLights();

		//////////////////////////////////////////////////////////////////////
		/// \brief Указать сцену (необходима для уничтожения со сцены)
		///		
		/// \param[in] Scene Сцена
		//////////////////////////////////////////////////////////////////////
		void SetScene( Scene* Scene );

		//////////////////////////////////////////////////////////////////////
		/// \brief Получить точеный источник света с данным именем
		///
		/// \param[in] NameLight Название света
		/// \return PointLight*, если такого света нету то NULL
		//////////////////////////////////////////////////////////////////////
		PointLight* GetPointLight( const string& NameLight );

		//////////////////////////////////////////////////////////////////////
		/// \brief Получить массив точеных источников света с данным именем
		///
		/// \param[in] NameLight Название света
		/// \return vector<PointLight*>&
		//////////////////////////////////////////////////////////////////////
		vector<PointLight*> GetPointLights( const string& NameLight );

		//////////////////////////////////////////////////////////////////////
		/// \brief Получить весь массив точеных источников света
		///
		/// \return vector<PointLight>*
		//////////////////////////////////////////////////////////////////////
		vector<PointLight>* GetAllPointLights();

	private:

		Scene*						Scene; ///< Сцена на котором находятся источники света

		vector<PointLight>			PointLights; ///< Массив точечных источников света
	};

	//-------------------------------------------------------------------------//
}

#endif // LIGHT_MANAGER_H
