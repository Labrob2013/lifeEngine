//////////////////////////////////////////////////////////////////////////
// 
//			*** lifeEngine (Двигатель Жизни) ***
//					Copyright (C) 2017
//
// Связь со мной:		https://vk.com/zombihello
// Репозиторий движка:  https://github.com/zombihello/lifeEngine
// 
//////////////////////////////////////////////////////////////////////////

#ifndef QUERY_H
#define QUERY_H

#define COMPILING_LIBRARY
#include <DllGlobal.h>

//////////////
// OPENGL
//////////////
#include <glew\glew.h>

namespace le
{
	//-------------------------------------------------------------------------//

	//////////////////////////////////////////////////////////////////////
	/// \brief Класс для работы с Occlusion Queries
	///
	/// Данный класс необходим для определения видимости геометрии с учетом перекрытия
	//////////////////////////////////////////////////////////////////////
	class DLL_API Query
	{
	public:
		//////////////////////////////////////////////////////////////////////
		/// \brief Конструктор
		//////////////////////////////////////////////////////////////////////
		Query();

		//////////////////////////////////////////////////////////////////////
		/// \brief Конструктор копирывания
		//////////////////////////////////////////////////////////////////////
		Query( Query& Copy );

		//////////////////////////////////////////////////////////////////////
		/// \brief Конструктор
		///		
		/// \param[in] Type Тип Query
		//////////////////////////////////////////////////////////////////////
		Query( GLenum Type );

		//////////////////////////////////////////////////////////////////////
		/// \brief Деструктор
		//////////////////////////////////////////////////////////////////////
		~Query();

		//////////////////////////////////////////////////////////////////////
		/// \brief Начать тест видимости
		//////////////////////////////////////////////////////////////////////
		inline void Start();

		//////////////////////////////////////////////////////////////////////
		/// \brief Начать услоный рендер
		///		
		/// \param[in] Mode Указывает, как Query интерпретирует результаты запроса окклюзии
		//////////////////////////////////////////////////////////////////////
		inline void StartConditionalRender( GLenum Mode );

		//////////////////////////////////////////////////////////////////////
		/// \brief Закончить услоный рендер
		//////////////////////////////////////////////////////////////////////
		inline void EndConditionalRender();

		//////////////////////////////////////////////////////////////////////
		/// \brief Закончить тест видимости
		//////////////////////////////////////////////////////////////////////
		inline void End();

		//////////////////////////////////////////////////////////////////////
		/// \brief Используется ли квери объект
		///
		/// \return true - да, false - нет
		//////////////////////////////////////////////////////////////////////
		inline bool IsInUse();

		//////////////////////////////////////////////////////////////////////
		/// \brief Готов ли результат теста
		///
		/// \return true - да, false - нет
		//////////////////////////////////////////////////////////////////////
		inline bool IsResultReady();

		//////////////////////////////////////////////////////////////////////
		/// \brief Получить результат теста
		///
		/// \return int, кол-во пикселей которые прошли проверку
		//////////////////////////////////////////////////////////////////////
		inline int GetResult();

		Query& operator=( const Query& Copy );

		bool			InUse; ///< Используется ли объект

		GLuint			Id; ///< OpenGL Имя Query 
		GLenum			Type; ///< Тип Query
	};

	//-------------------------------------------------------------------------//
}

#endif //QYERT_H