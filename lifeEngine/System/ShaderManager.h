//////////////////////////////////////////////////////////////////////////
// 
//			*** lifeEngine (Двигатель Жизни) ***
//					Copyright (C) 2017
//
// Связь со мной:		https://vk.com/zombihello
// Репозиторий движка:  https://github.com/zombihello/lifeEngine
// 
//////////////////////////////////////////////////////////////////////////

#ifndef SHADER_MANAGER
#define SHADER_MANAGER

#define COMPILING_LIBRARY
#include <DllGlobal.h>

////////////////
// LIFEENGINE
///////////////
#include <System\ResourcesManager.h>

namespace le
{
	//-------------------------------------------------------------------------//

	enum QualityShadows
	{
		None,
		Low,
		Medium,
		High
	};

	//-------------------------------------------------------------------------//

	//////////////////////////////////////////////////////////////////////
	/// \brief Структура хранит настройки графики
	//////////////////////////////////////////////////////////////////////
	struct DLL_API GraphicsSettings
	{
		//////////////////////////////////////////////////////////////////////
		/// \brief конструктор
		//////////////////////////////////////////////////////////////////////
		GraphicsSettings();

		QualityShadows		QualityShadows;				///< Качество теней
	};

	//////////////////////////////////////////////////////////////////////
	/// \brief Класс предназначенный для работы с качеством шейдеров
	///
	/// Этот класс необходим для управления сложностью шейдеров в
	/// зависимости от настроек графики
	//////////////////////////////////////////////////////////////////////
	class DLL_API ShaderManager
	{
	public:

		//////////////////////////////////////////////////////////////////////
		/// \brief Загрузить все шейдера в зависимости от настроек графики
		//////////////////////////////////////////////////////////////////////
		static void LoadShaders();

		//////////////////////////////////////////////////////////////////////
		/// \brief Удалить загруженные шейдера
		//////////////////////////////////////////////////////////////////////
		static void DeleteShaders();

		//////////////////////////////////////////////////////////////////////
		/// \brief Задать настройки графики
		///		
		/// \param[in] GraphicsSettings Настройки графики
		//////////////////////////////////////////////////////////////////////
		static void SetGraphicsSettings( GraphicsSettings& GraphicsSettings );

		//////////////////////////////////////////////////////////////////////
		/// \brief Получить настройки графики
		///		
		/// \return Настройки графики
		//////////////////////////////////////////////////////////////////////
		static GraphicsSettings& GetGraphicsSettings();

	private:

		static GraphicsSettings			GraphicsSettings;		///< Настройки графики
	};

	//-------------------------------------------------------------------------//
}

#endif // SHADER_MANAGER
